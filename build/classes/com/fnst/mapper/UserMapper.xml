<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fnst.dao.UserDao">
	
	
	<resultMap type="com.fnst.entity.User" id="UserResult">
	    <result column="id" property="id" />
	    <result column="name" property="name" />
   	    <result column="idNo" property="idNo" />
   	    <result column="email" property="email" />
	    <result column="password" property="password" />
	    <result column="role_name" property="roleName" />
	    <result column="create_date" property="createDate" />
	</resultMap>
	
	<select id="getUserList" resultMap="UserResult" parameterType="Map" >
	    select * from user
        <where>
            <if test="name != null and name != '' ">
                and name like #{name}
            </if>
            <if test="roleName != null and roleName != '' ">
                and role_name = #{roleName}
            </if>
            <if test="ids != null ">
                and id
                <if test="ids.size() > 0 ">
                	in 
                    <foreach collection="ids" item="item" index="index" open="(" separator="," close=")">  
	                    #{item}  
	                 </foreach>  
                </if>
  	            <if test="ids.size() == 0">
	                 = 0
	             </if>
            </if>
            and role_name != 'SuperAdmin' and is_deleted = 0
        </where>
        order by create_date desc
        <if test="start != null and size != null">
            limit #{start}, #{size}
        </if>
	</select>
	
	<select id="getUserListCount" resultType="int" parameterType="Map">
	 	    select count(*) from user
        <where>
            <if test="name != null and name != '' ">
                and name like #{name}
            </if>
            <if test="roleName != null and roleName != '' ">
                and role_name like #{roleName}
            </if>
            and role_name != 'SuperAdmin' and is_deleted = 0
        </where>
	</select>
	
	<update id="deleteUser" parameterType="Integer">
		update user set is_deleted = 1
		where id = #{userId}
	</update>
	
	<update id="updateUser" parameterType="Map">
		update user
		<set>
		    <if test="roleName != null and roleName != '' ">
		        role_name = #{roleName} , 
		    </if>
   		    <if test="name != null and name != '' ">
		        name = #{name} , 
		    </if>
   		    <if test="email != null and email != '' ">
		        email = #{email} , 
		    </if>
   		    <if test="password != null and password != '' ">
		        password = #{password} , 
		    </if>
		</set>
		where id = #{userId}
	</update>
	
	<select id="getAdminByUserId" parameterType="Integer" resultMap="UserResult">
	    select * from user where id = #{userId}
	</select>
	
	<select id="getUserListByPID" parameterType="int" resultMap="UserResult">
		select * from user where id IN(SELECT user_id from pro_user where pro_id=#{proId})
	</select>
	
	<select id="checkLogin" resultMap="UserResult" parameterType="com.fnst.entity.User">
		select * from user where idNo = #{idNo} and password=#{password}
	</select>
	
	<select id="getUserById" resultMap="UserResult" >
		select * from user where id=#{id};
	</select>
	
	<update id="updateUserPWD" parameterType="INTEGER">
		update user
		<set>
   		    <if test="password != null and password != '' ">
		        password = #{password} ,
		    </if>
		</set>
		where id = #{id}
	</update>

	<insert id="addUser" parameterType="com.fnst.entity.User">
		insert into user values(null,#{name},#{IdNo},#{password},#{email},#{roleName},#{createDate},0)
	</insert>

	<select id="checkUserIsExist" parameterType="java.lang.String" resultType="int">
		select  Count(*) from user where IdNo=#{IdNo} 
	</select>

	<select id="checkUserNameIsExist" parameterType="java.lang.String" resultType="int">
		select  Count(*) from user where name=#{name} 
	</select>

	
	<select id="getLeaderIdByLeaderName" resultType="Integer" parameterType="Map" >
	select distinct(id) from user
	<where>
	<if test="leaderName != null and leaderName != '' ">
        and name like #{leaderName}
    </if>
	    and is_deleted = 0
	</where>
	</select>
	
</mapper>


