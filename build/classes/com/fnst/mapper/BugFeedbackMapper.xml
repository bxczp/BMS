<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.fnst.dao.BugFeedbackDao">
	 <resultMap id="BaseResultMap" type="com.fnst.entity.BugFeedback" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="bug_id" property="bugId" jdbcType="INTEGER" />
    <result column="note_description" property="noteDescription" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="note_code" property="noteCode" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, user_id, bug_id, note_description, create_date, update_date, note_code
  </sql>
  <!-- 插入一条调查记录 -->
  
 <insert id="insert" parameterType="com.fnst.entity.BugFeedback" >
   
   
    insert into bug_feedback (id, user_id, bug_id, 
      note_description, create_date, update_date, 
      note_code)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bugId,jdbcType=INTEGER}, 
      #{noteDescription,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{noteCode,jdbcType=VARCHAR})
  </insert>
  <!-- 查询bug  f反馈记录 -->
 <select id="getFeedbackListByBID" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from bug_feedback
    where bug_id = #{bugId,jdbcType=INTEGER}  
    order by update_date
  </select>
  
  <select id="getMAXFID" resultMap="BaseResultMap">
	select * from bug_feedback  order   by   id   desc   limit   1
	</select>
	
	 <select id="getBugIDS" resultMap="BaseResultMap" parameterType="int">
	select <include refid="Base_Column_List" /> from bug_feedback where user_id=#{userId} GROUP BY bug_id
	</select>
</mapper>



